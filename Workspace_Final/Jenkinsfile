pipeline {
  agent {
    docker {
      image 'docker:20-dind'
      args '--privileged -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  environment {
    NODE_VERSION = '20-alpine'
    DOCKERHUB_CREDENTIALS = credentials('dockerhub-cred-id')
    DOCKERHUB_USERNAME = 'khangdinh2103'
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'master', url: 'https://github.com/khangdinh2103/Microservices_Jewelry_eCommerce_FE.git'
      }
    }

    stage('Build & Start Services') {
      steps {
        dir('Workspace_Final') {
          script {
            sh 'docker-compose build'
            sh 'docker-compose up -d'
          }
        }
        // Đợi service khởi động và cài pnpm
        sleep 40
      }
    }

    stage('Test Services') {
      steps {
        script {
          sh '''
            nc -zv localhost 3000
            nc -zv localhost 3001
            nc -zv localhost 3005
            nc -zv localhost 3006
          '''
        }
      }
    }

    stage('Build & Push Docker Images') {
      steps {
        script {
          def serviceName = 'service-account'
          def imageName = "${DOCKERHUB_USERNAME}/${serviceName}"

          sh """
            docker build -t ${imageName}:latest ./Service_Account/service-account-vite
            echo "Login to Docker Hub"
            echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker push ${imageName}:latest
            docker logout
          """
        }
      }
    }
  }

  post {
    always {
      echo 'Cleanup: stop and remove containers'
      dir('Workspace_Final') {
        sh 'docker-compose down'
      }
    }
  }
}
